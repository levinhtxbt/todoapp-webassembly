@using TodoApp.Model.Dto
@using TodoApp.Model.Dto.User
@using TodoApp.Model.Enums
@using TodoApp.Wasm.Services

<EditForm Model="searchQuery">
    <div class="row">
        <div class="col-2">
            <label class="form-label">Title</label>
            <InputText class="form-control" @bind-Value="searchQuery.Title"></InputText>
        </div>

        <div class="col-2">
            <label class="form-label">Assignee</label>
            <InputSelect class="form-control" @bind-Value="searchQuery.AssigneeId">
                <option>Select an assignee</option>
                @foreach (var assignee in assignees)
                {
                    <option value="@assignee.Id">@assignee.Name</option>
                }
            </InputSelect>
        </div>

        <div class="col-2">
            <label class="form-label">Status</label>
            <InputSelect class="form-control" @bind-Value="searchQuery.Status">
                <option>Select a status</option>
                @foreach (var status in Enum.GetNames(typeof(Status)))
                {
                    <option value="@status">@status</option>
                }
            </InputSelect>
        </div>

        <div class="col-2">
            <label class="form-label">Priority</label>
            <InputSelect class="form-control" @bind-Value="searchQuery.Priority">
                <option>Select a priority</option>
                @foreach (var priority in Enum.GetNames(typeof(Priority)))
                {
                    <option value="@priority">@priority</option>
                }
            </InputSelect>
        </div>

        <div class="col-2 pt-4">
            <div class="row">

                <div class="col-6">
                    <button class="btn btn-primary" @onclick="async () => await onSearch.InvokeAsync(searchQuery)">Search</button>

                </div>
                <div class="col-6">
                    <button class="btn btn-secondary" @onclick="ClearSearch">Clear</button>

                </div>
            </div>
        </div>

        <div class="col-2 pt-4 align-content-end">
            <a href="/todo/new" class="btn btn-success justify-content-end">Create</a>
        </div>
    </div>

</EditForm>

@code {

    private List<AssigneeDto> assignees = new();

    private SearchTaskDto searchQuery = new();

    [Parameter]
    public EventCallback<SearchTaskDto> onSearch { get; set; }

    [Inject]
    private IUserApiService UserApiService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        assignees = await UserApiService.GetAssigneesAsync();
    }

    private async Task ClearSearch()
    {
        searchQuery.Priority = null;
        searchQuery.Status = null;
        searchQuery.Title = null;
        searchQuery.AssigneeId = null;
        await onSearch.InvokeAsync(searchQuery);
    }

}