@using TodoApp.Model.Dto
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-end">
        @foreach (var p in Link)
        {
            <li @onclick="() => OnSelectedPage(p)" class="page-item  @(p.Active ? "active" : null) @(p.Enabled ? null : "disabled")">
                <a class="page-link" aria-label="@p.Text">
                    <span aria-hidden="true">@p.Text</span>
                </a>
            </li>
        }
    </ul>
</nav>

@code {

    [Parameter]
    public MetaData MetaData { get; set; }

    [Parameter]
    public int Spread { get; set; }

    [Parameter]
    public EventCallback<int> OnPageChanged { get; set; }

    public List<PageItem> Link { get; set; } = new();

    protected override void OnParametersSet()
    {
        CreatePaginationLinks();
    }

    private void CreatePaginationLinks()
    {
        Link = new List<PageItem>();
        Link.Add(new PageItem(MetaData.CurrentPage - 1, MetaData.HasPrevious, "«"));
        for (int i = 1; i <= MetaData.TotalPages; i++)
        {
            if (i >= MetaData.CurrentPage - Spread && i <= MetaData.CurrentPage + Spread)
            {
                Link.Add(new PageItem(i, Enabled: true, Text: i.ToString(), Active: MetaData.CurrentPage == i));
            }
        }
        Link.Add(new PageItem(MetaData.CurrentPage + 1, MetaData.HasNext, "»"));
    }

    private async Task OnSelectedPage(PageItem link)
    {
        if (link.Page == MetaData.CurrentPage || !link.Enabled)
            return;

        MetaData.CurrentPage = link.Page;
        await OnPageChanged.InvokeAsync(link.Page);
    }

}